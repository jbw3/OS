 ☐ Create bootable HDD (see notes)
 ☐ Implement filesystem
 ☐ Organize files (see notes)
 ☐ Create heap
 ☐ Support 64-bit x86
 ☐ Support Arm processor
 ☐ Move multiboot header to its own file (http://os.phil-opp.com/multiboot-kernel.html)
 ☐ Use multiple cores
 ☐ Blinking text

Create user processes:
 ✔ Load program as GRUB module @done (16-05-29 13:23)
 ☐ Map kernel to "Higher Half"
 ☐ C/C++ programs
 ☐ System calls
 ☐ Cooperative scheduling
 ☐ ELF format
 ☐ Preemptive scheduling

Shell:
 ☐ History
 ☐ Tab complete

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ Write README @done (16-01-31 17:46)
 ✔ Only map kernel code and data in page table @done (16-01-16 17:48)
 ✔ Call C++ global constructors (Bare Bones Tutorial, http://wiki.osdev.org/Bare_Bones) @done (16-01-16 00:18)
 ✔ Page fault handler is not registered correctly @done (16-01-15 20:09)
 ✔ Move debugging functions to their own file @done (16-01-15 19:38)
 ✔ Enable paging @done (16-01-13 22:58)
 ✔ Build cross-compiler @done (16-01-13 22:56)
